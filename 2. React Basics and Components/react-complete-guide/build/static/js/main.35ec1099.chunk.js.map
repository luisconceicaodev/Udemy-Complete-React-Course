{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","useState","title","setTitle","amount","onClick","Expenses","items","ExpenseForm","setAmount","setDate","onSubmit","e","preventDefault","expenseData","console","log","type","value","onChange","target","min","step","max","NewExpense","App","expenses","Date","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35ec1099.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\n// This is being used as our \"Section\"\r\nconst Card = (props) => {\r\n  // anything we recieve as a class is added to this string\r\n  const classes = \"card \" + props.className;\r\n\r\n  // .children is not a prop to be set,\r\n  // the value is the content between the opening\r\n  // and closing tags of the component\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  // To update the component on variable change you need to update a State\r\n  // the state is per component occurance, even if you repeat this component more than once in a page\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  const clickHandler = () => setTitle(\"abc\");\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2 className=\"\">{title}</h2>\r\n        <div className=\"expense-item__price\">{props.amount}</div>\r\n      </div>\r\n      <button /* onClick={clickHandler} executa apenas ao clicar, onClick={clickHandler()} executa onLoad */\r\n        onClick={clickHandler}\r\n      >\r\n        Change Title\r\n      </button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst Expenses = (props) => {\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseItem\r\n        title={props.items[0].title}\r\n        amount={props.items[0].amount}\r\n        date={props.items[0].date}\r\n      />\r\n      <ExpenseItem\r\n        title={props.items[1].title}\r\n        amount={props.items[1].amount}\r\n        date={props.items[1].date}\r\n      />\r\n      <ExpenseItem\r\n        title={props.items[2].title}\r\n        amount={props.items[2].amount}\r\n        date={props.items[2].date}\r\n      />\r\n      <ExpenseItem\r\n        title={props.items[3].title}\r\n        amount={props.items[3].amount}\r\n        date={props.items[3].date}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nexport const ExpenseForm = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setTitle(e.target.value);\r\n    console.log(\"title: \", title);\r\n  };\r\n\r\n  const amountChangeHandler = (e) => {\r\n    setAmount(e.target.value);\r\n    console.log(\"amount: \", amount);\r\n  };\r\n\r\n  const dateChangeHandler = (e) => {\r\n    setDate(e.target.value);\r\n    console.log(\"date: \", date);\r\n  };\r\n\r\n  // setExpense tem de ter os 3 valores, se não ficam vazios\r\n  // eslint-disable-next-line\r\n  const [expenseNOTUSED, setExpense] = useState({\r\n    title: \"\",\r\n    amount: \"\",\r\n    date: \"\",\r\n  });\r\n\r\n  // ...expense, title: value -> faz spread dos valores do expense e depois atualiza o title com o value\r\n  // course teacher prefered to not use this and to instead use the one state for each variable\r\n  // eslint-disable-next-line\r\n  const titleChangeHandlerNOTUSED = (e) => {\r\n    /* \r\n    -- Wrong way of using the previous state to update the current state\r\n    setExpense({\r\n      ...expense,\r\n      title: e.target.value\r\n    }); \r\n    \r\n    */\r\n\r\n    setExpense((prevState) => {\r\n      return { ...prevState, title: e.target.value };\r\n    });\r\n  };\r\n  // eslint-disable-next-line\r\n  const amountChangeHandlerNOTUSED = (e) => {\r\n    setExpense((prevState) => {\r\n      return { ...prevState, amount: e.target.value };\r\n    });\r\n  };\r\n  // eslint-disable-next-line\r\n  const dateChangeHandlerNOTUSED = (e) => {\r\n    setExpense((prevState) => {\r\n      return { ...prevState, date: e.target.value };\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: title,\r\n      amount: amount,\r\n      date: date,\r\n    };\r\n\r\n    console.log(\"yo mom: \", expenseData);\r\n\r\n    /* Clear inputs (value) on submit */\r\n    setTitle(\"\");\r\n    setAmount(\"\");\r\n    setDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          {/* Não é preciso passar (e) => title(e) */}\r\n          <input type=\"text\" value={title} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            /* Add state as the value */\r\n            value={amount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={date}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import { ExpenseForm } from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nexport const NewExpense = () => {\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\n// Equivalent to our Switcher\n\nconst App = () => {\n  const expenses = [\n    { title: \"Car Insurance\", amount: 29.67, date: new Date(2021, 4, 22) },\n    { title: \"House Insurance\", amount: 394.67, date: new Date(2021, 9, 8) },\n    { title: \"Life Insurance\", amount: 54.67, date: new Date(2021, 11, 14) },\n    { title: \"Netflix Insurance\", amount: 994.67, date: new Date(2021, 1, 31) },\n  ];\n\n  // JSX syntax\n  return (\n    <div>\n      <NewExpense />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n\n/* \n  -- How you would do it in Vanilla JS\n\n  const para = document.createElement('p');\n  para.textContent = \"This is also visible\";\n  document.getElementById('root').append(para);\n\n*/\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// Second arg is where the ReactDOM will append\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}